package application;

import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;

import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.control.cell.TextFieldTableCell;

import java.net.URL;
import java.util.ResourceBundle;

import datos.CRUDProducto;
import datos.Producto;
import datos.Security;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;

import javafx.scene.input.MouseEvent;
import javafx.stage.Stage;
import javafx.scene.control.TableView;

import javafx.scene.control.TableColumn;

public class ModificarProductoController implements Initializable  {
	@FXML
	private TextField IdTxt;
	@FXML
	private TextField NombreTxt;
	@FXML
	private Button ModificarBtn;
	@FXML
	private Button BuscarBtn;
	@FXML
	private TableView<Producto> ProductoTable;
	@FXML
	private TableColumn<Producto, String> IdColumn;
	@FXML
	private TableColumn<Producto, String> NombreColumn;
	@FXML
	private TableColumn<Producto, String> StockColumn;
	@FXML
	private TableColumn<Producto, String> DescripcionColumn;
	@FXML
	private TableColumn<Producto, String> PrecioColumn;
	@FXML
	private Button VolverBtn;
	private ObservableList<Producto> producto = FXCollections.observableArrayList();
	private CRUDProducto CRUDProducto;
	public ModificarProductoController() {
        this.CRUDProducto = new CRUDProducto();}
	// Event Listener on Button[#ModificarBtn].onMouseClicked
	@FXML
	public void ClickModificar(MouseEvent event) {
		// TODO Autogenerated
		Producto producto = ProductoTable.getSelectionModel().getSelectedItem();
        if (producto != null) {
        	if (producto.isEditado()) {
        		boolean modificar = CRUDProducto.Modificar(producto);      
        		if (modificar) {
        			producto.setEditado(false);
        		}}}}
	// Event Listener on Button[#BuscarBtn].onMouseClicked
	@FXML
	public void ClickBuscar(MouseEvent event) {
		// TODO Autogenerated
		String id = IdTxt.getText();
		String nombre = NombreTxt.getText();	
		this.ProductoTable.getItems().clear();
		ObservableList<Producto> info = FXCollections.observableArrayList(CRUDProducto.Mostrar(id, nombre));
		this.ProductoTable.setItems(info);}
	// Event Listener on Button[#VolverBtn].onMouseClicked
	@FXML
	public void ClickVolver(MouseEvent event) {
		// TODO Autogenerated
		String puesto = Security.ComprobarPuesto().toUpperCase();
		if (puesto.equals("ADMIN")) {
			CargarLoginAdmin LA = new CargarLoginAdmin((Stage)this.VolverBtn.getScene().getWindow());}
		else if (puesto.equals("GERENTE")) {
			CargarLoginGerente LG = new CargarLoginGerente((Stage)this.VolverBtn.getScene().getWindow());}
		else if (puesto.equals("VENDEDOR")) {
			CargarLoginVendedor LV = new CargarLoginVendedor((Stage)this.VolverBtn.getScene().getWindow());}}
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		// TODO Auto-generated method stub
		ProductoTable.setEditable(true);
		IdColumn.setCellFactory(TextFieldTableCell.forTableColumn());
		NombreColumn.setCellFactory(TextFieldTableCell.forTableColumn());
		StockColumn.setCellFactory(TextFieldTableCell.forTableColumn());
		DescripcionColumn.setCellFactory(TextFieldTableCell.forTableColumn());
		PrecioColumn.setCellFactory(TextFieldTableCell.forTableColumn());
		this.CRUDProducto = new CRUDProducto();
		this.IdColumn.setCellValueFactory(new PropertyValueFactory<Producto, String>("id"));
		this.NombreColumn.setCellValueFactory(new PropertyValueFactory<Producto, String>("nombre"));
		this.StockColumn.setCellValueFactory(new PropertyValueFactory<Producto, String>("stock"));
		this.DescripcionColumn.setCellValueFactory(new PropertyValueFactory<Producto, String>("descripcion"));
		this.PrecioColumn.setCellValueFactory(new PropertyValueFactory<Producto, String>("precio"));;
		ProductoTable.setItems(this.producto);
		IdColumn.setOnEditCommit(event -> {
	        Producto e = event.getRowValue();
	        e.setId(event.getNewValue());
	        e.setEditado(true);});
        NombreColumn.setOnEditCommit(event -> {
        	Producto e = event.getRowValue();
            e.setNombre(event.getNewValue());
            e.setEditado(true);});
        StockColumn.setOnEditCommit(event -> {
        	Producto e = event.getRowValue();
        	e.setStock(event.getNewValue());
        	e.setEditado(true);});
        DescripcionColumn.setOnEditCommit(event -> {
        	Producto e = event.getRowValue();
        	e.setDescripcion(event.getNewValue());
        	e.setEditado(true);});
        PrecioColumn.setOnEditCommit(event -> {
        	Producto e = event.getRowValue();
        	e.setPrecio(event.getNewValue());
        	e.setEditado(true);});}}
